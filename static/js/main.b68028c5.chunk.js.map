{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","itemsPerPage","currentPage","setCurrentPage","onPageChange","items","pages","maxPages","Math","ceil","i","push","className","href","onClick","newPage","map","page","slice","item","from","to","numbers","n","getNumbers","App","useState","setItemsPerPage","min","length","id","defaultValue","onChange","e","target","value","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"8KAYaA,EAAwB,SAAC,GAapC,IAJI,IAPFC,EAOC,EAPDA,MACAC,EAMC,EANDA,aAMC,IALDC,mBAKC,MALa,EAKb,EAJDC,EAIC,EAJDA,eACAC,EAGC,EAHDA,aACAC,EAEC,EAFDA,MAGIC,EAAkB,GAClBC,EAAWC,KAAKC,KAAKT,EAAQC,GAE1BS,EAAI,EAAGA,GAAKH,EAAUG,GAAK,EAClCJ,EAAMK,KAAKD,GAGb,OACE,qCACE,qBAAIE,UAAU,aAAd,UACE,oBAAIA,UAA2B,IAAhBV,EAAoB,qBAAuB,YAA1D,SACE,mBACE,UAAQ,WACRU,UAAU,YACVC,KAAK,QACL,gBAA+B,IAAhBX,EACfY,QAAS,WACP,IAAMC,EAAUb,EAAc,EAE9BE,EAAaW,GACbZ,EAAeY,IATnB,oBAeDT,EAAMU,KAAI,SAAAC,GAAI,OACb,oBAEEL,UACEV,IAAgBe,EACZ,mBACA,YALR,SAQE,mBACE,UAAQ,WACRL,UAAU,YACVC,KAAI,WAAMI,GACVH,QAAS,WACPV,EAAaa,GACbd,EAAec,IANnB,SASGA,KAhBEA,MAoBT,oBACEL,UACEV,IAAgBK,EACZ,qBACA,YAJR,SAOE,mBACE,UAAQ,WACRK,UAAU,YACVC,KAAK,QACL,gBAAeX,IAAgBK,EAC/BO,QAAS,WACP,IAAMC,EAAUb,EAAc,EAE9BE,EAAaW,GACbZ,EAAeY,IATnB,uBAgBJ,6BACGV,EAAMa,OAAOhB,EAAc,GAAKD,EAC/BC,EAAcD,GAAce,KAAI,SAACG,GAAD,OAChC,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YC3F5Bd,ECLC,SAAoBe,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQX,KAAKY,GAGf,OAAOD,EDFeE,CAAW,EAAG,IACnCR,KAAI,SAAAO,GAAC,qBAAYA,MAEPE,EAAU,WACrB,MAAsCC,mBAAS,GAA/C,mBAAOxB,EAAP,KAAoBC,EAApB,KACA,EAAwCuB,mBAAS,GAAjD,mBAAOzB,EAAP,KAAqB0B,EAArB,KAMA,OACE,sBAAKf,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,iCAEIV,EAFJ,sCAIMA,EAAc,GAAKD,EAAgB,EAJzC,gCAMIO,KAAKoB,IAAI1B,EAAcD,GAN3B,wBAOOI,EAAMwB,OAPb,OAUA,sBAAKjB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRkB,GAAG,kBACHlB,UAAU,eACVmB,aAAc,EACdC,SAAU,SAACC,GAAD,OAAON,GAAiBM,EAAEC,OAAOC,QAL7C,UAOE,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOC,QAAQ,kBAAkBxB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEZ,MAAOK,EAAMwB,OACb5B,aAAcA,EACdC,YAAaA,EACbE,aA3CmB,SAACa,GACxBd,EAAec,IA2CXZ,MAAOA,EACPF,eAAgBA,QEtDxBkC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.b68028c5.chunk.js","sourcesContent":["/* eslint-disable react/jsx-indent */\nimport { FC } from 'react';\n\ninterface Props {\n  total: number,\n  itemsPerPage: number,\n  currentPage: number | undefined,\n  setCurrentPage: (n: number) => void,\n  onPageChange: (page: number) => void,\n  items: string[],\n}\n\nexport const Pagination: FC<Props> = (\n  {\n    total,\n    itemsPerPage,\n    currentPage = 1,\n    setCurrentPage,\n    onPageChange,\n    items,\n  },\n) => {\n  const pages: number[] = [];\n  const maxPages = Math.ceil(total / itemsPerPage);\n\n  for (let i = 1; i <= maxPages; i += 1) {\n    pages.push(i);\n  }\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={currentPage === 1 ? 'page-item disabled' : 'page-item'}>\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1}\n            onClick={() => {\n              const newPage = currentPage - 1;\n\n              onPageChange(newPage);\n              setCurrentPage(newPage);\n            }}\n          >\n            «\n          </a>\n        </li>\n        {pages.map(page => (\n          <li\n            key={page}\n            className={\n              currentPage === page\n                ? 'page-item active'\n                : 'page-item'\n            }\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${page}`}\n              onClick={() => {\n                onPageChange(page);\n                setCurrentPage(page);\n              }}\n            >\n              {page}\n            </a>\n          </li>\n        ))}\n        <li\n          className={\n            currentPage === maxPages\n              ? 'page-item disabled'\n              : 'page-item'\n          }\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage === maxPages}\n            onClick={() => {\n              const newPage = currentPage + 1;\n\n              onPageChange(newPage);\n              setCurrentPage(newPage);\n            }}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {items.slice((currentPage - 1) * itemsPerPage,\n          currentPage * itemsPerPage).map((item) => (\n          <li data-cy=\"item\" key={item}>\n            {item}\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import { FC, useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst items: string[] = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n\n  const handlePageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page\n        ${currentPage}\n        (items\n        ${((currentPage - 1) * itemsPerPage) + 1}\n        -\n        ${Math.min(currentPage * itemsPerPage)}\n        of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            defaultValue={5}\n            onChange={(e) => setItemsPerPage(+e.target.value)}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        itemsPerPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={handlePageChange}\n        items={items}\n        setCurrentPage={setCurrentPage}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}